#!/bin/bash

# This script automates the process of cloning a git repository, adding and committing changes to the repository, and pushing the changes to the remote repository.

clone () {                                             
    git clone $remote_url;                                                 
    if [ $? -eq 0 ];   # if the exit status of the previous command is 0, then the clone was successful.                                               
    then                         
        echo -e "\nClone was successful, Enjoy your Day. \n";                         
    else                       
        echo -e "\nEither URL is invalid, or you've already cloned it here. \n";                        
    fi
}

add_commit () {                                  
    flag=0;
    dir="./.git";  # check if the current directory is a git repo or not.
    if [ ! -d "$dir" ];  # if the directory does not exist, then initialize the current directory.
    then
        echo -e "No Version Control History Found. Initializing the Current Directory \n";
        git init;
        flag=1;
    else
        echo -e "\nVersion control history found. \n";
    fi

    echo -e "\nAdding Files to Push\n"; # add all the files to the staging area.
    git add -A;

    echo -e "\nPrinting Git Status \n"; # print the git status.
    git status;

    echo -e "\nEnter the commit message \n"; # enter the commit message.
    read commit_message;
    git commit -m "$commit_message"; # commit the changes.
}

push () {
    if [ $? -eq 0 ];
    then
        echo -e "\nCreating a main branch \n"; # create a new branch.
        git branch -M main;

        echo -e "\nAdding Remote URL \n"; # add the remote url.
        git remote add origin $remote_url;
    else
        echo -e "\nRemote origin already exists \n";
    fi

    echo -e "\nCan I confirm the push (y/n) ?";  # confirm the push.
    read user_confirmation;  # read the user input.
    echo;

    if [ $user_confirmation == "y" ];  # if the user confirms the push, then push the changes.
    then
        echo -e "\nPushing Changes to the Remote Repository \n";
        git push -u origin main;
    else
        echo -e "\nPush Cancelled \n";
    fi
}

pull () {
    echo -e "\nPulling Changes from the Remote Repository \n";
    git pull; # pull the changes from the remote repository.
}

cat <<'EOF'            
         Menu                   
-------------------------------------------------------                          
Enter 1 - To clone a Repo                          
Enter 2 - To add and commit changes to the Repo
Enter 3 - To push changes to a Repo
Enter 4 - To pull changes from a Repo                       
-------------------------------------------------------                       
EOF


read user_choice;   
echo "Enter a git repo URL";           
read remote_url;                                            
case $user_choice in                        
    1)                         
    clone $remote_url;;

    2)
    add_commit $remote_url;;

    3)
    push $remote_url;;

    4)
    pull $remote_url;;

    *)
    echo -e "\nInvalid Choice \n";
esac
